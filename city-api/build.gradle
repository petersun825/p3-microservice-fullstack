buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.avast.gradle:gradle-docker-compose-plugin:0.6.17"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.4.0.RELEASE'
    }
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.cloud:spring-cloud-starter-eureka'

	compile 'org.flywaydb:flyway-core'
	runtime 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'


	compile('org.springframework.boot:spring-boot-starter')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

//dockerCompose {
//	useComposeFiles = ['docker-compose.test.yml']
//}

//task waitForCityAPI(type: Exec) {
//	commandLine './wait-for-api.sh','http://localhost:8080/city', 'City API'
//}
//
//
//
//task runRetailersAPITests(type: Exec) {
//	workingDir './city-api'
//	commandLine './gradlew', 'test'
//}
//
//task allTests(type: Test) {
//	dependsOn cleanTest
//	dependsOn waitForCityAPI
//	dependsOn runCityAPITests
//
//
//	testLogging {
//		exceptionFormat "full"
//		events "skipped", "passed", "failed"
//		displayGranularity 2
//	}
//}
//
//test {
//	dependsOn cleanTest
//	dependsOn waitForCityAPI
//
//	testLogging {
//		exceptionFormat "full"
//		events "skipped", "passed", "failed"
//		displayGranularity 2
//	}
//}
//
//dockerCompose.isRequiredBy(allTests)
